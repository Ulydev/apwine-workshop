/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import { TypedEventFilter, TypedEvent, TypedListener } from "./commons"
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi"
import { BytesLike } from "@ethersproject/bytes"
import { Listener, Provider } from "@ethersproject/providers"
import {
    ethers,
    EventFilter,
    Signer,
    BigNumber,
    BigNumberish,
    PopulatedTransaction,
    Contract,
    ContractTransaction,
    Overrides,
    CallOverrides,
} from "ethers"

interface AMMRouterInterface extends ethers.utils.Interface {
    functions: {
        "DEFAULT_ADMIN_ROLE()": FunctionFragment
        "GOVERNANCE_FEE()": FunctionFragment
        "REFERRAL_FEE(address)": FunctionFragment
        "collectGovernanceFee(address,address)": FunctionFragment
        "getAmountIn(address,uint256[],uint256[],uint256)": FunctionFragment
        "getAmountOut(address,uint256[],uint256[],uint256)": FunctionFragment
        "getRoleAdmin(bytes32)": FunctionFragment
        "getRoleMember(bytes32,uint256)": FunctionFragment
        "getRoleMemberCount(bytes32)": FunctionFragment
        "getSpotPrice(address,uint256[],uint256[])": FunctionFragment
        "grantRole(bytes32,address)": FunctionFragment
        "hasRole(bytes32,address)": FunctionFragment
        "initialize(address,address)": FunctionFragment
        "registry()": FunctionFragment
        "renounceRole(bytes32,address)": FunctionFragment
        "revokeRole(bytes32,address)": FunctionFragment
        "setGovernanceFee(uint256)": FunctionFragment
        "setReferral(address,uint256)": FunctionFragment
        "setRegistry(address)": FunctionFragment
        "swapExactAmountIn(address,uint256[],uint256[],uint256,uint256,address,uint256,address)": FunctionFragment
        "swapExactAmountOut(address,uint256[],uint256[],uint256,uint256,address,uint256,address)": FunctionFragment
        "updateAllTokenApprovalOf(address)": FunctionFragment
        "updateFYTApprovalOf(address)": FunctionFragment
    }

    encodeFunctionData(
        functionFragment: "DEFAULT_ADMIN_ROLE",
        values?: undefined
    ): string
    encodeFunctionData(
        functionFragment: "GOVERNANCE_FEE",
        values?: undefined
    ): string
    encodeFunctionData(
        functionFragment: "REFERRAL_FEE",
        values: [string]
    ): string
    encodeFunctionData(
        functionFragment: "collectGovernanceFee",
        values: [string, string]
    ): string
    encodeFunctionData(
        functionFragment: "getAmountIn",
        values: [string, BigNumberish[], BigNumberish[], BigNumberish]
    ): string
    encodeFunctionData(
        functionFragment: "getAmountOut",
        values: [string, BigNumberish[], BigNumberish[], BigNumberish]
    ): string
    encodeFunctionData(
        functionFragment: "getRoleAdmin",
        values: [BytesLike]
    ): string
    encodeFunctionData(
        functionFragment: "getRoleMember",
        values: [BytesLike, BigNumberish]
    ): string
    encodeFunctionData(
        functionFragment: "getRoleMemberCount",
        values: [BytesLike]
    ): string
    encodeFunctionData(
        functionFragment: "getSpotPrice",
        values: [string, BigNumberish[], BigNumberish[]]
    ): string
    encodeFunctionData(
        functionFragment: "grantRole",
        values: [BytesLike, string]
    ): string
    encodeFunctionData(
        functionFragment: "hasRole",
        values: [BytesLike, string]
    ): string
    encodeFunctionData(
        functionFragment: "initialize",
        values: [string, string]
    ): string
    encodeFunctionData(functionFragment: "registry", values?: undefined): string
    encodeFunctionData(
        functionFragment: "renounceRole",
        values: [BytesLike, string]
    ): string
    encodeFunctionData(
        functionFragment: "revokeRole",
        values: [BytesLike, string]
    ): string
    encodeFunctionData(
        functionFragment: "setGovernanceFee",
        values: [BigNumberish]
    ): string
    encodeFunctionData(
        functionFragment: "setReferral",
        values: [string, BigNumberish]
    ): string
    encodeFunctionData(
        functionFragment: "setRegistry",
        values: [string]
    ): string
    encodeFunctionData(
        functionFragment: "swapExactAmountIn",
        values: [
            string,
            BigNumberish[],
            BigNumberish[],
            BigNumberish,
            BigNumberish,
            string,
            BigNumberish,
            string
        ]
    ): string
    encodeFunctionData(
        functionFragment: "swapExactAmountOut",
        values: [
            string,
            BigNumberish[],
            BigNumberish[],
            BigNumberish,
            BigNumberish,
            string,
            BigNumberish,
            string
        ]
    ): string
    encodeFunctionData(
        functionFragment: "updateAllTokenApprovalOf",
        values: [string]
    ): string
    encodeFunctionData(
        functionFragment: "updateFYTApprovalOf",
        values: [string]
    ): string

    decodeFunctionResult(
        functionFragment: "DEFAULT_ADMIN_ROLE",
        data: BytesLike
    ): Result
    decodeFunctionResult(
        functionFragment: "GOVERNANCE_FEE",
        data: BytesLike
    ): Result
    decodeFunctionResult(
        functionFragment: "REFERRAL_FEE",
        data: BytesLike
    ): Result
    decodeFunctionResult(
        functionFragment: "collectGovernanceFee",
        data: BytesLike
    ): Result
    decodeFunctionResult(
        functionFragment: "getAmountIn",
        data: BytesLike
    ): Result
    decodeFunctionResult(
        functionFragment: "getAmountOut",
        data: BytesLike
    ): Result
    decodeFunctionResult(
        functionFragment: "getRoleAdmin",
        data: BytesLike
    ): Result
    decodeFunctionResult(
        functionFragment: "getRoleMember",
        data: BytesLike
    ): Result
    decodeFunctionResult(
        functionFragment: "getRoleMemberCount",
        data: BytesLike
    ): Result
    decodeFunctionResult(
        functionFragment: "getSpotPrice",
        data: BytesLike
    ): Result
    decodeFunctionResult(functionFragment: "grantRole", data: BytesLike): Result
    decodeFunctionResult(functionFragment: "hasRole", data: BytesLike): Result
    decodeFunctionResult(
        functionFragment: "initialize",
        data: BytesLike
    ): Result
    decodeFunctionResult(functionFragment: "registry", data: BytesLike): Result
    decodeFunctionResult(
        functionFragment: "renounceRole",
        data: BytesLike
    ): Result
    decodeFunctionResult(
        functionFragment: "revokeRole",
        data: BytesLike
    ): Result
    decodeFunctionResult(
        functionFragment: "setGovernanceFee",
        data: BytesLike
    ): Result
    decodeFunctionResult(
        functionFragment: "setReferral",
        data: BytesLike
    ): Result
    decodeFunctionResult(
        functionFragment: "setRegistry",
        data: BytesLike
    ): Result
    decodeFunctionResult(
        functionFragment: "swapExactAmountIn",
        data: BytesLike
    ): Result
    decodeFunctionResult(
        functionFragment: "swapExactAmountOut",
        data: BytesLike
    ): Result
    decodeFunctionResult(
        functionFragment: "updateAllTokenApprovalOf",
        data: BytesLike
    ): Result
    decodeFunctionResult(
        functionFragment: "updateFYTApprovalOf",
        data: BytesLike
    ): Result

    events: {
        "GovernanceFeeCollected(address,uint256,address)": EventFragment
        "GovernanceFeeUpdated(uint256)": EventFragment
        "ReferralFeePaid(address,uint256)": EventFragment
        "ReferralRecipientAdded(address)": EventFragment
        "ReferralRecipientRemoved(address)": EventFragment
        "ReferralSet(address,uint256)": EventFragment
        "RegistrySet(address)": EventFragment
        "RoleAdminChanged(bytes32,bytes32,bytes32)": EventFragment
        "RoleGranted(bytes32,address,address)": EventFragment
        "RoleRevoked(bytes32,address,address)": EventFragment
        "TokenApproved(address,address)": EventFragment
    }

    getEvent(nameOrSignatureOrTopic: "GovernanceFeeCollected"): EventFragment
    getEvent(nameOrSignatureOrTopic: "GovernanceFeeUpdated"): EventFragment
    getEvent(nameOrSignatureOrTopic: "ReferralFeePaid"): EventFragment
    getEvent(nameOrSignatureOrTopic: "ReferralRecipientAdded"): EventFragment
    getEvent(nameOrSignatureOrTopic: "ReferralRecipientRemoved"): EventFragment
    getEvent(nameOrSignatureOrTopic: "ReferralSet"): EventFragment
    getEvent(nameOrSignatureOrTopic: "RegistrySet"): EventFragment
    getEvent(nameOrSignatureOrTopic: "RoleAdminChanged"): EventFragment
    getEvent(nameOrSignatureOrTopic: "RoleGranted"): EventFragment
    getEvent(nameOrSignatureOrTopic: "RoleRevoked"): EventFragment
    getEvent(nameOrSignatureOrTopic: "TokenApproved"): EventFragment
}

export class AMMRouter extends Contract {
    connect(signerOrProvider: Signer | Provider | string): this
    attach(addressOrName: string): this
    deployed(): Promise<this>

    listeners<EventArgsArray extends Array<any>, EventArgsObject>(
        eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
    ): Array<TypedListener<EventArgsArray, EventArgsObject>>
    off<EventArgsArray extends Array<any>, EventArgsObject>(
        eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
        listener: TypedListener<EventArgsArray, EventArgsObject>
    ): this
    on<EventArgsArray extends Array<any>, EventArgsObject>(
        eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
        listener: TypedListener<EventArgsArray, EventArgsObject>
    ): this
    once<EventArgsArray extends Array<any>, EventArgsObject>(
        eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
        listener: TypedListener<EventArgsArray, EventArgsObject>
    ): this
    removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
        eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
        listener: TypedListener<EventArgsArray, EventArgsObject>
    ): this
    removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
        eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
    ): this

    listeners(eventName?: string): Array<Listener>
    off(eventName: string, listener: Listener): this
    on(eventName: string, listener: Listener): this
    once(eventName: string, listener: Listener): this
    removeListener(eventName: string, listener: Listener): this
    removeAllListeners(eventName?: string): this

    queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
        event: TypedEventFilter<EventArgsArray, EventArgsObject>,
        fromBlockOrBlockhash?: string | number | undefined,
        toBlock?: string | number | undefined
    ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>

    interface: AMMRouterInterface

    functions: {
        DEFAULT_ADMIN_ROLE(overrides?: CallOverrides): Promise<[string]>

        "DEFAULT_ADMIN_ROLE()"(overrides?: CallOverrides): Promise<[string]>

        GOVERNANCE_FEE(overrides?: CallOverrides): Promise<[BigNumber]>

        "GOVERNANCE_FEE()"(overrides?: CallOverrides): Promise<[BigNumber]>

        REFERRAL_FEE(
            arg0: string,
            overrides?: CallOverrides
        ): Promise<[BigNumber]>

        "REFERRAL_FEE(address)"(
            arg0: string,
            overrides?: CallOverrides
        ): Promise<[BigNumber]>

        collectGovernanceFee(
            _token: string,
            _recipient: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        "collectGovernanceFee(address,address)"(
            _token: string,
            _recipient: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        getAmountIn(
            _amm: string,
            _pairPath: BigNumberish[],
            _tokenPath: BigNumberish[],
            _tokenAmountOut: BigNumberish,
            overrides?: CallOverrides
        ): Promise<[BigNumber] & { tokenAmountIn: BigNumber }>

        "getAmountIn(address,uint256[],uint256[],uint256)"(
            _amm: string,
            _pairPath: BigNumberish[],
            _tokenPath: BigNumberish[],
            _tokenAmountOut: BigNumberish,
            overrides?: CallOverrides
        ): Promise<[BigNumber] & { tokenAmountIn: BigNumber }>

        getAmountOut(
            _amm: string,
            _pairPath: BigNumberish[],
            _tokenPath: BigNumberish[],
            _tokenAmountIn: BigNumberish,
            overrides?: CallOverrides
        ): Promise<[BigNumber] & { tokenAmountOut: BigNumber }>

        "getAmountOut(address,uint256[],uint256[],uint256)"(
            _amm: string,
            _pairPath: BigNumberish[],
            _tokenPath: BigNumberish[],
            _tokenAmountIn: BigNumberish,
            overrides?: CallOverrides
        ): Promise<[BigNumber] & { tokenAmountOut: BigNumber }>

        getRoleAdmin(
            role: BytesLike,
            overrides?: CallOverrides
        ): Promise<[string]>

        "getRoleAdmin(bytes32)"(
            role: BytesLike,
            overrides?: CallOverrides
        ): Promise<[string]>

        getRoleMember(
            role: BytesLike,
            index: BigNumberish,
            overrides?: CallOverrides
        ): Promise<[string]>

        "getRoleMember(bytes32,uint256)"(
            role: BytesLike,
            index: BigNumberish,
            overrides?: CallOverrides
        ): Promise<[string]>

        getRoleMemberCount(
            role: BytesLike,
            overrides?: CallOverrides
        ): Promise<[BigNumber]>

        "getRoleMemberCount(bytes32)"(
            role: BytesLike,
            overrides?: CallOverrides
        ): Promise<[BigNumber]>

        getSpotPrice(
            _amm: string,
            _pairPath: BigNumberish[],
            _tokenPath: BigNumberish[],
            overrides?: CallOverrides
        ): Promise<[BigNumber] & { spotPrice: BigNumber }>

        "getSpotPrice(address,uint256[],uint256[])"(
            _amm: string,
            _pairPath: BigNumberish[],
            _tokenPath: BigNumberish[],
            overrides?: CallOverrides
        ): Promise<[BigNumber] & { spotPrice: BigNumber }>

        grantRole(
            role: BytesLike,
            account: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        "grantRole(bytes32,address)"(
            role: BytesLike,
            account: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        hasRole(
            role: BytesLike,
            account: string,
            overrides?: CallOverrides
        ): Promise<[boolean]>

        "hasRole(bytes32,address)"(
            role: BytesLike,
            account: string,
            overrides?: CallOverrides
        ): Promise<[boolean]>

        initialize(
            _registry: string,
            _admin: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        "initialize(address,address)"(
            _registry: string,
            _admin: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        registry(overrides?: CallOverrides): Promise<[string]>

        "registry()"(overrides?: CallOverrides): Promise<[string]>

        renounceRole(
            role: BytesLike,
            account: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        "renounceRole(bytes32,address)"(
            role: BytesLike,
            account: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        revokeRole(
            role: BytesLike,
            account: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        "revokeRole(bytes32,address)"(
            role: BytesLike,
            account: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        setGovernanceFee(
            _fee: BigNumberish,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        "setGovernanceFee(uint256)"(
            _fee: BigNumberish,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        setReferral(
            _recipient: string,
            _fee: BigNumberish,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        "setReferral(address,uint256)"(
            _recipient: string,
            _fee: BigNumberish,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        setRegistry(
            _registry: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        "setRegistry(address)"(
            _registry: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        swapExactAmountIn(
            _amm: string,
            _pairPath: BigNumberish[],
            _tokenPath: BigNumberish[],
            _tokenAmountIn: BigNumberish,
            _minAmountOut: BigNumberish,
            _to: string,
            _deadline: BigNumberish,
            _referralRecipient: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        "swapExactAmountIn(address,uint256[],uint256[],uint256,uint256,address,uint256,address)"(
            _amm: string,
            _pairPath: BigNumberish[],
            _tokenPath: BigNumberish[],
            _tokenAmountIn: BigNumberish,
            _minAmountOut: BigNumberish,
            _to: string,
            _deadline: BigNumberish,
            _referralRecipient: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        swapExactAmountOut(
            _amm: string,
            _pairPath: BigNumberish[],
            _tokenPath: BigNumberish[],
            _maxAmountIn: BigNumberish,
            _tokenAmountOut: BigNumberish,
            _to: string,
            _deadline: BigNumberish,
            _referralRecipient: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        "swapExactAmountOut(address,uint256[],uint256[],uint256,uint256,address,uint256,address)"(
            _amm: string,
            _pairPath: BigNumberish[],
            _tokenPath: BigNumberish[],
            _maxAmountIn: BigNumberish,
            _tokenAmountOut: BigNumberish,
            _to: string,
            _deadline: BigNumberish,
            _referralRecipient: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        updateAllTokenApprovalOf(
            _amm: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        "updateAllTokenApprovalOf(address)"(
            _amm: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        updateFYTApprovalOf(
            _amm: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        "updateFYTApprovalOf(address)"(
            _amm: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>
    }

    DEFAULT_ADMIN_ROLE(overrides?: CallOverrides): Promise<string>

    "DEFAULT_ADMIN_ROLE()"(overrides?: CallOverrides): Promise<string>

    GOVERNANCE_FEE(overrides?: CallOverrides): Promise<BigNumber>

    "GOVERNANCE_FEE()"(overrides?: CallOverrides): Promise<BigNumber>

    REFERRAL_FEE(arg0: string, overrides?: CallOverrides): Promise<BigNumber>

    "REFERRAL_FEE(address)"(
        arg0: string,
        overrides?: CallOverrides
    ): Promise<BigNumber>

    collectGovernanceFee(
        _token: string,
        _recipient: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    "collectGovernanceFee(address,address)"(
        _token: string,
        _recipient: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    getAmountIn(
        _amm: string,
        _pairPath: BigNumberish[],
        _tokenPath: BigNumberish[],
        _tokenAmountOut: BigNumberish,
        overrides?: CallOverrides
    ): Promise<BigNumber>

    "getAmountIn(address,uint256[],uint256[],uint256)"(
        _amm: string,
        _pairPath: BigNumberish[],
        _tokenPath: BigNumberish[],
        _tokenAmountOut: BigNumberish,
        overrides?: CallOverrides
    ): Promise<BigNumber>

    getAmountOut(
        _amm: string,
        _pairPath: BigNumberish[],
        _tokenPath: BigNumberish[],
        _tokenAmountIn: BigNumberish,
        overrides?: CallOverrides
    ): Promise<BigNumber>

    "getAmountOut(address,uint256[],uint256[],uint256)"(
        _amm: string,
        _pairPath: BigNumberish[],
        _tokenPath: BigNumberish[],
        _tokenAmountIn: BigNumberish,
        overrides?: CallOverrides
    ): Promise<BigNumber>

    getRoleAdmin(role: BytesLike, overrides?: CallOverrides): Promise<string>

    "getRoleAdmin(bytes32)"(
        role: BytesLike,
        overrides?: CallOverrides
    ): Promise<string>

    getRoleMember(
        role: BytesLike,
        index: BigNumberish,
        overrides?: CallOverrides
    ): Promise<string>

    "getRoleMember(bytes32,uint256)"(
        role: BytesLike,
        index: BigNumberish,
        overrides?: CallOverrides
    ): Promise<string>

    getRoleMemberCount(
        role: BytesLike,
        overrides?: CallOverrides
    ): Promise<BigNumber>

    "getRoleMemberCount(bytes32)"(
        role: BytesLike,
        overrides?: CallOverrides
    ): Promise<BigNumber>

    getSpotPrice(
        _amm: string,
        _pairPath: BigNumberish[],
        _tokenPath: BigNumberish[],
        overrides?: CallOverrides
    ): Promise<BigNumber>

    "getSpotPrice(address,uint256[],uint256[])"(
        _amm: string,
        _pairPath: BigNumberish[],
        _tokenPath: BigNumberish[],
        overrides?: CallOverrides
    ): Promise<BigNumber>

    grantRole(
        role: BytesLike,
        account: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    "grantRole(bytes32,address)"(
        role: BytesLike,
        account: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    hasRole(
        role: BytesLike,
        account: string,
        overrides?: CallOverrides
    ): Promise<boolean>

    "hasRole(bytes32,address)"(
        role: BytesLike,
        account: string,
        overrides?: CallOverrides
    ): Promise<boolean>

    initialize(
        _registry: string,
        _admin: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    "initialize(address,address)"(
        _registry: string,
        _admin: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    registry(overrides?: CallOverrides): Promise<string>

    "registry()"(overrides?: CallOverrides): Promise<string>

    renounceRole(
        role: BytesLike,
        account: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    "renounceRole(bytes32,address)"(
        role: BytesLike,
        account: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    revokeRole(
        role: BytesLike,
        account: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    "revokeRole(bytes32,address)"(
        role: BytesLike,
        account: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    setGovernanceFee(
        _fee: BigNumberish,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    "setGovernanceFee(uint256)"(
        _fee: BigNumberish,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    setReferral(
        _recipient: string,
        _fee: BigNumberish,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    "setReferral(address,uint256)"(
        _recipient: string,
        _fee: BigNumberish,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    setRegistry(
        _registry: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    "setRegistry(address)"(
        _registry: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    swapExactAmountIn(
        _amm: string,
        _pairPath: BigNumberish[],
        _tokenPath: BigNumberish[],
        _tokenAmountIn: BigNumberish,
        _minAmountOut: BigNumberish,
        _to: string,
        _deadline: BigNumberish,
        _referralRecipient: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    "swapExactAmountIn(address,uint256[],uint256[],uint256,uint256,address,uint256,address)"(
        _amm: string,
        _pairPath: BigNumberish[],
        _tokenPath: BigNumberish[],
        _tokenAmountIn: BigNumberish,
        _minAmountOut: BigNumberish,
        _to: string,
        _deadline: BigNumberish,
        _referralRecipient: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    swapExactAmountOut(
        _amm: string,
        _pairPath: BigNumberish[],
        _tokenPath: BigNumberish[],
        _maxAmountIn: BigNumberish,
        _tokenAmountOut: BigNumberish,
        _to: string,
        _deadline: BigNumberish,
        _referralRecipient: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    "swapExactAmountOut(address,uint256[],uint256[],uint256,uint256,address,uint256,address)"(
        _amm: string,
        _pairPath: BigNumberish[],
        _tokenPath: BigNumberish[],
        _maxAmountIn: BigNumberish,
        _tokenAmountOut: BigNumberish,
        _to: string,
        _deadline: BigNumberish,
        _referralRecipient: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    updateAllTokenApprovalOf(
        _amm: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    "updateAllTokenApprovalOf(address)"(
        _amm: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    updateFYTApprovalOf(
        _amm: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    "updateFYTApprovalOf(address)"(
        _amm: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    callStatic: {
        DEFAULT_ADMIN_ROLE(overrides?: CallOverrides): Promise<string>

        "DEFAULT_ADMIN_ROLE()"(overrides?: CallOverrides): Promise<string>

        GOVERNANCE_FEE(overrides?: CallOverrides): Promise<BigNumber>

        "GOVERNANCE_FEE()"(overrides?: CallOverrides): Promise<BigNumber>

        REFERRAL_FEE(
            arg0: string,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        "REFERRAL_FEE(address)"(
            arg0: string,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        collectGovernanceFee(
            _token: string,
            _recipient: string,
            overrides?: CallOverrides
        ): Promise<void>

        "collectGovernanceFee(address,address)"(
            _token: string,
            _recipient: string,
            overrides?: CallOverrides
        ): Promise<void>

        getAmountIn(
            _amm: string,
            _pairPath: BigNumberish[],
            _tokenPath: BigNumberish[],
            _tokenAmountOut: BigNumberish,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        "getAmountIn(address,uint256[],uint256[],uint256)"(
            _amm: string,
            _pairPath: BigNumberish[],
            _tokenPath: BigNumberish[],
            _tokenAmountOut: BigNumberish,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        getAmountOut(
            _amm: string,
            _pairPath: BigNumberish[],
            _tokenPath: BigNumberish[],
            _tokenAmountIn: BigNumberish,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        "getAmountOut(address,uint256[],uint256[],uint256)"(
            _amm: string,
            _pairPath: BigNumberish[],
            _tokenPath: BigNumberish[],
            _tokenAmountIn: BigNumberish,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        getRoleAdmin(
            role: BytesLike,
            overrides?: CallOverrides
        ): Promise<string>

        "getRoleAdmin(bytes32)"(
            role: BytesLike,
            overrides?: CallOverrides
        ): Promise<string>

        getRoleMember(
            role: BytesLike,
            index: BigNumberish,
            overrides?: CallOverrides
        ): Promise<string>

        "getRoleMember(bytes32,uint256)"(
            role: BytesLike,
            index: BigNumberish,
            overrides?: CallOverrides
        ): Promise<string>

        getRoleMemberCount(
            role: BytesLike,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        "getRoleMemberCount(bytes32)"(
            role: BytesLike,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        getSpotPrice(
            _amm: string,
            _pairPath: BigNumberish[],
            _tokenPath: BigNumberish[],
            overrides?: CallOverrides
        ): Promise<BigNumber>

        "getSpotPrice(address,uint256[],uint256[])"(
            _amm: string,
            _pairPath: BigNumberish[],
            _tokenPath: BigNumberish[],
            overrides?: CallOverrides
        ): Promise<BigNumber>

        grantRole(
            role: BytesLike,
            account: string,
            overrides?: CallOverrides
        ): Promise<void>

        "grantRole(bytes32,address)"(
            role: BytesLike,
            account: string,
            overrides?: CallOverrides
        ): Promise<void>

        hasRole(
            role: BytesLike,
            account: string,
            overrides?: CallOverrides
        ): Promise<boolean>

        "hasRole(bytes32,address)"(
            role: BytesLike,
            account: string,
            overrides?: CallOverrides
        ): Promise<boolean>

        initialize(
            _registry: string,
            _admin: string,
            overrides?: CallOverrides
        ): Promise<void>

        "initialize(address,address)"(
            _registry: string,
            _admin: string,
            overrides?: CallOverrides
        ): Promise<void>

        registry(overrides?: CallOverrides): Promise<string>

        "registry()"(overrides?: CallOverrides): Promise<string>

        renounceRole(
            role: BytesLike,
            account: string,
            overrides?: CallOverrides
        ): Promise<void>

        "renounceRole(bytes32,address)"(
            role: BytesLike,
            account: string,
            overrides?: CallOverrides
        ): Promise<void>

        revokeRole(
            role: BytesLike,
            account: string,
            overrides?: CallOverrides
        ): Promise<void>

        "revokeRole(bytes32,address)"(
            role: BytesLike,
            account: string,
            overrides?: CallOverrides
        ): Promise<void>

        setGovernanceFee(
            _fee: BigNumberish,
            overrides?: CallOverrides
        ): Promise<void>

        "setGovernanceFee(uint256)"(
            _fee: BigNumberish,
            overrides?: CallOverrides
        ): Promise<void>

        setReferral(
            _recipient: string,
            _fee: BigNumberish,
            overrides?: CallOverrides
        ): Promise<void>

        "setReferral(address,uint256)"(
            _recipient: string,
            _fee: BigNumberish,
            overrides?: CallOverrides
        ): Promise<void>

        setRegistry(_registry: string, overrides?: CallOverrides): Promise<void>

        "setRegistry(address)"(
            _registry: string,
            overrides?: CallOverrides
        ): Promise<void>

        swapExactAmountIn(
            _amm: string,
            _pairPath: BigNumberish[],
            _tokenPath: BigNumberish[],
            _tokenAmountIn: BigNumberish,
            _minAmountOut: BigNumberish,
            _to: string,
            _deadline: BigNumberish,
            _referralRecipient: string,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        "swapExactAmountIn(address,uint256[],uint256[],uint256,uint256,address,uint256,address)"(
            _amm: string,
            _pairPath: BigNumberish[],
            _tokenPath: BigNumberish[],
            _tokenAmountIn: BigNumberish,
            _minAmountOut: BigNumberish,
            _to: string,
            _deadline: BigNumberish,
            _referralRecipient: string,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        swapExactAmountOut(
            _amm: string,
            _pairPath: BigNumberish[],
            _tokenPath: BigNumberish[],
            _maxAmountIn: BigNumberish,
            _tokenAmountOut: BigNumberish,
            _to: string,
            _deadline: BigNumberish,
            _referralRecipient: string,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        "swapExactAmountOut(address,uint256[],uint256[],uint256,uint256,address,uint256,address)"(
            _amm: string,
            _pairPath: BigNumberish[],
            _tokenPath: BigNumberish[],
            _maxAmountIn: BigNumberish,
            _tokenAmountOut: BigNumberish,
            _to: string,
            _deadline: BigNumberish,
            _referralRecipient: string,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        updateAllTokenApprovalOf(
            _amm: string,
            overrides?: CallOverrides
        ): Promise<void>

        "updateAllTokenApprovalOf(address)"(
            _amm: string,
            overrides?: CallOverrides
        ): Promise<void>

        updateFYTApprovalOf(
            _amm: string,
            overrides?: CallOverrides
        ): Promise<void>

        "updateFYTApprovalOf(address)"(
            _amm: string,
            overrides?: CallOverrides
        ): Promise<void>
    }

    filters: {
        GovernanceFeeCollected(
            _token: null,
            _amount: null,
            _recipient: null
        ): TypedEventFilter<
            [string, BigNumber, string],
            { _token: string; _amount: BigNumber; _recipient: string }
        >

        GovernanceFeeUpdated(
            _fee: null
        ): TypedEventFilter<[BigNumber], { _fee: BigNumber }>

        ReferralFeePaid(
            _recipient: null,
            _feeAmount: null
        ): TypedEventFilter<
            [string, BigNumber],
            { _recipient: string; _feeAmount: BigNumber }
        >

        ReferralRecipientAdded(
            _recipient: null
        ): TypedEventFilter<[string], { _recipient: string }>

        ReferralRecipientRemoved(
            _recipient: null
        ): TypedEventFilter<[string], { _recipient: string }>

        ReferralSet(
            _recipient: null,
            _fee: null
        ): TypedEventFilter<
            [string, BigNumber],
            { _recipient: string; _fee: BigNumber }
        >

        RegistrySet(
            _registry: null
        ): TypedEventFilter<[string], { _registry: string }>

        RoleAdminChanged(
            role: BytesLike | null,
            previousAdminRole: BytesLike | null,
            newAdminRole: BytesLike | null
        ): TypedEventFilter<
            [string, string, string],
            { role: string; previousAdminRole: string; newAdminRole: string }
        >

        RoleGranted(
            role: BytesLike | null,
            account: string | null,
            sender: string | null
        ): TypedEventFilter<
            [string, string, string],
            { role: string; account: string; sender: string }
        >

        RoleRevoked(
            role: BytesLike | null,
            account: string | null,
            sender: string | null
        ): TypedEventFilter<
            [string, string, string],
            { role: string; account: string; sender: string }
        >

        TokenApproved(
            _token: null,
            _amm: null
        ): TypedEventFilter<[string, string], { _token: string; _amm: string }>
    }

    estimateGas: {
        DEFAULT_ADMIN_ROLE(overrides?: CallOverrides): Promise<BigNumber>

        "DEFAULT_ADMIN_ROLE()"(overrides?: CallOverrides): Promise<BigNumber>

        GOVERNANCE_FEE(overrides?: CallOverrides): Promise<BigNumber>

        "GOVERNANCE_FEE()"(overrides?: CallOverrides): Promise<BigNumber>

        REFERRAL_FEE(
            arg0: string,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        "REFERRAL_FEE(address)"(
            arg0: string,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        collectGovernanceFee(
            _token: string,
            _recipient: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        "collectGovernanceFee(address,address)"(
            _token: string,
            _recipient: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        getAmountIn(
            _amm: string,
            _pairPath: BigNumberish[],
            _tokenPath: BigNumberish[],
            _tokenAmountOut: BigNumberish,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        "getAmountIn(address,uint256[],uint256[],uint256)"(
            _amm: string,
            _pairPath: BigNumberish[],
            _tokenPath: BigNumberish[],
            _tokenAmountOut: BigNumberish,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        getAmountOut(
            _amm: string,
            _pairPath: BigNumberish[],
            _tokenPath: BigNumberish[],
            _tokenAmountIn: BigNumberish,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        "getAmountOut(address,uint256[],uint256[],uint256)"(
            _amm: string,
            _pairPath: BigNumberish[],
            _tokenPath: BigNumberish[],
            _tokenAmountIn: BigNumberish,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        getRoleAdmin(
            role: BytesLike,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        "getRoleAdmin(bytes32)"(
            role: BytesLike,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        getRoleMember(
            role: BytesLike,
            index: BigNumberish,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        "getRoleMember(bytes32,uint256)"(
            role: BytesLike,
            index: BigNumberish,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        getRoleMemberCount(
            role: BytesLike,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        "getRoleMemberCount(bytes32)"(
            role: BytesLike,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        getSpotPrice(
            _amm: string,
            _pairPath: BigNumberish[],
            _tokenPath: BigNumberish[],
            overrides?: CallOverrides
        ): Promise<BigNumber>

        "getSpotPrice(address,uint256[],uint256[])"(
            _amm: string,
            _pairPath: BigNumberish[],
            _tokenPath: BigNumberish[],
            overrides?: CallOverrides
        ): Promise<BigNumber>

        grantRole(
            role: BytesLike,
            account: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        "grantRole(bytes32,address)"(
            role: BytesLike,
            account: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        hasRole(
            role: BytesLike,
            account: string,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        "hasRole(bytes32,address)"(
            role: BytesLike,
            account: string,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        initialize(
            _registry: string,
            _admin: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        "initialize(address,address)"(
            _registry: string,
            _admin: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        registry(overrides?: CallOverrides): Promise<BigNumber>

        "registry()"(overrides?: CallOverrides): Promise<BigNumber>

        renounceRole(
            role: BytesLike,
            account: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        "renounceRole(bytes32,address)"(
            role: BytesLike,
            account: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        revokeRole(
            role: BytesLike,
            account: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        "revokeRole(bytes32,address)"(
            role: BytesLike,
            account: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        setGovernanceFee(
            _fee: BigNumberish,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        "setGovernanceFee(uint256)"(
            _fee: BigNumberish,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        setReferral(
            _recipient: string,
            _fee: BigNumberish,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        "setReferral(address,uint256)"(
            _recipient: string,
            _fee: BigNumberish,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        setRegistry(
            _registry: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        "setRegistry(address)"(
            _registry: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        swapExactAmountIn(
            _amm: string,
            _pairPath: BigNumberish[],
            _tokenPath: BigNumberish[],
            _tokenAmountIn: BigNumberish,
            _minAmountOut: BigNumberish,
            _to: string,
            _deadline: BigNumberish,
            _referralRecipient: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        "swapExactAmountIn(address,uint256[],uint256[],uint256,uint256,address,uint256,address)"(
            _amm: string,
            _pairPath: BigNumberish[],
            _tokenPath: BigNumberish[],
            _tokenAmountIn: BigNumberish,
            _minAmountOut: BigNumberish,
            _to: string,
            _deadline: BigNumberish,
            _referralRecipient: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        swapExactAmountOut(
            _amm: string,
            _pairPath: BigNumberish[],
            _tokenPath: BigNumberish[],
            _maxAmountIn: BigNumberish,
            _tokenAmountOut: BigNumberish,
            _to: string,
            _deadline: BigNumberish,
            _referralRecipient: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        "swapExactAmountOut(address,uint256[],uint256[],uint256,uint256,address,uint256,address)"(
            _amm: string,
            _pairPath: BigNumberish[],
            _tokenPath: BigNumberish[],
            _maxAmountIn: BigNumberish,
            _tokenAmountOut: BigNumberish,
            _to: string,
            _deadline: BigNumberish,
            _referralRecipient: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        updateAllTokenApprovalOf(
            _amm: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        "updateAllTokenApprovalOf(address)"(
            _amm: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        updateFYTApprovalOf(
            _amm: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        "updateFYTApprovalOf(address)"(
            _amm: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>
    }

    populateTransaction: {
        DEFAULT_ADMIN_ROLE(
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        "DEFAULT_ADMIN_ROLE()"(
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        GOVERNANCE_FEE(overrides?: CallOverrides): Promise<PopulatedTransaction>

        "GOVERNANCE_FEE()"(
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        REFERRAL_FEE(
            arg0: string,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        "REFERRAL_FEE(address)"(
            arg0: string,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        collectGovernanceFee(
            _token: string,
            _recipient: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        "collectGovernanceFee(address,address)"(
            _token: string,
            _recipient: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        getAmountIn(
            _amm: string,
            _pairPath: BigNumberish[],
            _tokenPath: BigNumberish[],
            _tokenAmountOut: BigNumberish,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        "getAmountIn(address,uint256[],uint256[],uint256)"(
            _amm: string,
            _pairPath: BigNumberish[],
            _tokenPath: BigNumberish[],
            _tokenAmountOut: BigNumberish,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        getAmountOut(
            _amm: string,
            _pairPath: BigNumberish[],
            _tokenPath: BigNumberish[],
            _tokenAmountIn: BigNumberish,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        "getAmountOut(address,uint256[],uint256[],uint256)"(
            _amm: string,
            _pairPath: BigNumberish[],
            _tokenPath: BigNumberish[],
            _tokenAmountIn: BigNumberish,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        getRoleAdmin(
            role: BytesLike,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        "getRoleAdmin(bytes32)"(
            role: BytesLike,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        getRoleMember(
            role: BytesLike,
            index: BigNumberish,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        "getRoleMember(bytes32,uint256)"(
            role: BytesLike,
            index: BigNumberish,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        getRoleMemberCount(
            role: BytesLike,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        "getRoleMemberCount(bytes32)"(
            role: BytesLike,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        getSpotPrice(
            _amm: string,
            _pairPath: BigNumberish[],
            _tokenPath: BigNumberish[],
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        "getSpotPrice(address,uint256[],uint256[])"(
            _amm: string,
            _pairPath: BigNumberish[],
            _tokenPath: BigNumberish[],
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        grantRole(
            role: BytesLike,
            account: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        "grantRole(bytes32,address)"(
            role: BytesLike,
            account: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        hasRole(
            role: BytesLike,
            account: string,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        "hasRole(bytes32,address)"(
            role: BytesLike,
            account: string,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        initialize(
            _registry: string,
            _admin: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        "initialize(address,address)"(
            _registry: string,
            _admin: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        registry(overrides?: CallOverrides): Promise<PopulatedTransaction>

        "registry()"(overrides?: CallOverrides): Promise<PopulatedTransaction>

        renounceRole(
            role: BytesLike,
            account: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        "renounceRole(bytes32,address)"(
            role: BytesLike,
            account: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        revokeRole(
            role: BytesLike,
            account: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        "revokeRole(bytes32,address)"(
            role: BytesLike,
            account: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        setGovernanceFee(
            _fee: BigNumberish,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        "setGovernanceFee(uint256)"(
            _fee: BigNumberish,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        setReferral(
            _recipient: string,
            _fee: BigNumberish,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        "setReferral(address,uint256)"(
            _recipient: string,
            _fee: BigNumberish,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        setRegistry(
            _registry: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        "setRegistry(address)"(
            _registry: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        swapExactAmountIn(
            _amm: string,
            _pairPath: BigNumberish[],
            _tokenPath: BigNumberish[],
            _tokenAmountIn: BigNumberish,
            _minAmountOut: BigNumberish,
            _to: string,
            _deadline: BigNumberish,
            _referralRecipient: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        "swapExactAmountIn(address,uint256[],uint256[],uint256,uint256,address,uint256,address)"(
            _amm: string,
            _pairPath: BigNumberish[],
            _tokenPath: BigNumberish[],
            _tokenAmountIn: BigNumberish,
            _minAmountOut: BigNumberish,
            _to: string,
            _deadline: BigNumberish,
            _referralRecipient: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        swapExactAmountOut(
            _amm: string,
            _pairPath: BigNumberish[],
            _tokenPath: BigNumberish[],
            _maxAmountIn: BigNumberish,
            _tokenAmountOut: BigNumberish,
            _to: string,
            _deadline: BigNumberish,
            _referralRecipient: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        "swapExactAmountOut(address,uint256[],uint256[],uint256,uint256,address,uint256,address)"(
            _amm: string,
            _pairPath: BigNumberish[],
            _tokenPath: BigNumberish[],
            _maxAmountIn: BigNumberish,
            _tokenAmountOut: BigNumberish,
            _to: string,
            _deadline: BigNumberish,
            _referralRecipient: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        updateAllTokenApprovalOf(
            _amm: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        "updateAllTokenApprovalOf(address)"(
            _amm: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        updateFYTApprovalOf(
            _amm: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        "updateFYTApprovalOf(address)"(
            _amm: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>
    }
}
